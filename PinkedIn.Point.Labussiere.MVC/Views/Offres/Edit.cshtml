@model PinkedIn.Point.Labussiere.Modele.Entity.Offre

@{
    ViewBag.Title = "Modifier";
}

<h2>Modifier une offre</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group mt-2">
            <p class="control-label col-md-2">Intitulé</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Intitule, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Intitule, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2">
            @Html.LabelFor(model => model.Salaire, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salaire, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salaire, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2">
            @Html.LabelFor(model => model.StatutId, "StatutId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StatutId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatutId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2">
            @Html.LabelFor(model => model.Responsable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Responsable, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Responsable, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Modifier" class="btn btn-outline-dark" />
            </div>
        </div>
    </div>
}

<div class="form-group mt-2">
    @Html.ActionLink("Retourner à la liste", "Index", null, new { @class = "btn btn-outline-dark" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
